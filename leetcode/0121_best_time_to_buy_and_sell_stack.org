
* question



* my solution1
- time complexity too high (too slow)
- 提高算法运算速度

#+BEGIN_SRC C++
int maxProfit(vector<int>& prices)
{
	int ans = 0;

	for (size_t i=0; i<prices.size(); ++i)
	{
		for (size_t j=i+1; j<prices.size(); ++j)
		{
			int profit = prices[j] - prices[i];

			ans = max(ans, profit);
		}
	}
	return ans;
}
#+END_SRC


* leetcode solution

- 记录最低值，不断计算利润
- 最低值并不一定是真正的买入点，需要通过最后的上涨情况来判断是否能够达到最大利润

#+BEGIN_SRC C++
int maxProfit(vector<int> &prices) {
    int maxPro = 0;
    int minPrice = INT_MAX;
    for(int i = 0; i < prices.size(); i++){
        minPrice = min(minPrice, prices[i]);
        maxPro = max(maxPro, prices[i] - minPrice);
    }
    return maxPro;
}
#+END_SRC

